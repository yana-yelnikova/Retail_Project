version: 2

models:
  - name: walmart_matched_products
    description: "Intermediate model filtering Walmart sales to include only matched electronic products (laptops, headphones, smartphones, tablets) and standardizing their category."
    columns:
      # Columns passed from the source table via SELECT *
      - name: actual_demand
        description: "Actual demand for the product."

      - name: category_abbreviation
        description: "Original abbreviated product category from raw Walmart data (e.g., 'Electronics', 'Appliances')."

      - name: customer_age
        description: "Age of the customer."

      - name: customer_gender
        description: "Gender of the customer."

      - name: customer_id
        description: "Unique identifier for the customer."
        tests:
          - not_null # Ensure customer ID is not null

      - name: customer_income
        description: "Income level of the customer."

      - name: customer_loyalty_level
        description: "Loyalty program level of the customer."

      - name: forecasted_demand
        description: "Forecasted demand for the product."

      - name: holiday_indicator
        description: "Boolean indicating if the transaction occurred during a holiday period."

      - name: inventory_level
        description: "Current inventory level for the product."

      - name: payment_method
        description: "Method of payment used for the transaction."

      - name: product_id
        description: "Unique identifier for the product."
        tests:
          - not_null # Ensure product ID is not null

      - name: product_name
        description: "Name of the product."
        tests:
          - not_null # Ensure product name is not null
          - accepted_values: # Ensures only these specific products are present after filtering
              values: ['Laptop', 'Headphones', 'Smartphone', 'Tablet']

      - name: promotion_applied
        description: "Boolean indicating if a promotion was applied to the transaction."

      - name: promotion_type
        description: "Type of promotion applied."

      - name: quantity_sold
        description: "Quantity of product units sold in the transaction."
        tests:
          - not_null # Ensure quantity sold is not null

      - name: reorder_point
        description: "Reorder point for inventory management."

      - name: reorder_quantity
        description: "Quantity to reorder when reorder point is reached."

      - name: stockout_indicator
        description: "Boolean indicating if a stockout occurred."

      - name: store_id
        description: "Unique identifier for the store where the transaction occurred."
        tests:
          - not_null # Ensure store ID is not null

      - name: store_location
        description: "Geographic location of the store."

      - name: supplier_id
        description: "Unique identifier for the product's supplier."

      - name: supplier_lead_time
        description: "Lead time for supplier delivery in days."

      - name: transaction_date
        description: "Date and time of the transaction."
        tests:
          - not_null # Ensure transaction date is not null

      - name: transaction_id
        description: "Unique identifier for the transaction."
        tests:
          - not_null # Ensure transaction ID is not null
          - unique # Ensure transaction ID is unique

      - name: unit_price
        description: "Unit price of the product."
        tests:
          - not_null # Ensure unit price is not null

      - name: weather_conditions
        description: "Weather conditions at the time of the transaction."

      - name: weekday_name
        description: "Day of the week for the transaction."

      # New calculated/standardized columns
      - name: full_category_name
        description: "Standardized full category name for the product. Always 'Electronics' for these filtered products."
        tests:
          - not_null # Ensure full category name is not null
          - accepted_values:
              values: ['Electronics'] # Ensures only 'Electronics' is present for these products
      - name: total_item_revenue
        description: "Total revenue for this specific item in the transaction (UNIT_PRICE * QUANTITY_SOLD)."
        tests:
          - not_null # Ensure total item revenue is not null
